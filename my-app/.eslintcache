[{"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\index.js":"1","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\App.js":"2","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\store.js":"3","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Utils\\theme.js":"4","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\CompanyReviews\\reducer.js":"5","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Search\\reducer.js":"6","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Login\\reducer.js":"7","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Register\\reducer.js":"8","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Routes\\Routes.jsx":"9","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\Header\\Header.jsx":"10","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Login\\actionTypes.js":"11","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Login\\actions.js":"12","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Register\\actionTypes.js":"13","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Search\\actionTypes.js":"14","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\CompanyReviews\\actionsConstants.js":"15","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Routes\\PrivateRoute.jsx":"16","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Pages\\AppliedJobs.jsx":"17","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Pages\\CompanyReviews.jsx":"18","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Pages\\DisplayJobs.jsx":"19","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Pages\\Home.jsx":"20","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Pages\\Login.jsx":"21","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Pages\\Review.jsx":"22","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Pages\\SavedJobs.jsx":"23","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Pages\\Register.jsx":"24","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\homepage\\Homepage.jsx":"25","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\appbar\\MyAppbar.jsx":"26","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\appbar\\UserMenu.jsx":"27","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\homepage\\HeroSection.jsx":"28","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\homepage\\Cards.jsx":"29","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\SearchForm.jsx":"30","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\homepage\\CardItem.jsx":"31","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\homepage\\Button.jsx":"32","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Utils\\localStorage.js":"33","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Search\\actions.js":"34","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\InputGrid.jsx":"35","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\Input.jsx":"36","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Register\\actions.js":"37","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\CompanyReviews\\action.js":"38","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\JobApply\\actions.js":"39","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\SaveJob\\actions.js":"40","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\footer\\Footer.jsx":"41","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\JobDescription.jsx":"42","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\JobApplyModal\\ApplyModal.jsx":"43","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\Review\\ReviewBox.jsx":"44","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\Menu\\JobMenu.jsx":"45","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\bossbaby\\Bossbaby.jsx":"46","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\Companies\\CompanyBox.jsx":"47","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\JobApply\\actionTypes.js":"48","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\SaveJob\\actionType.js":"49","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\Section.jsx":"50","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\JobApplyModal\\UploadForm.jsx":"51","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\bossbaby\\Typewriter.jsx":"52"},{"size":543,"mtime":1654968636895,"results":"53","hashOfConfig":"54"},{"size":633,"mtime":1654968636821,"results":"55","hashOfConfig":"54"},{"size":1267,"mtime":1654968636890,"results":"56","hashOfConfig":"54"},{"size":466,"mtime":1654968636894,"results":"57","hashOfConfig":"54"},{"size":1187,"mtime":1654968636877,"results":"58","hashOfConfig":"54"},{"size":1362,"mtime":1654968636889,"results":"59","hashOfConfig":"54"},{"size":1183,"mtime":1654968636882,"results":"60","hashOfConfig":"54"},{"size":720,"mtime":1654968636884,"results":"61","hashOfConfig":"54"},{"size":1761,"mtime":1654968636892,"results":"62","hashOfConfig":"54"},{"size":183,"mtime":1654968636832,"results":"63","hashOfConfig":"54"},{"size":170,"mtime":1654968636880,"results":"64","hashOfConfig":"54"},{"size":1823,"mtime":1655016704317,"results":"65","hashOfConfig":"54"},{"size":154,"mtime":1654968636883,"results":"66","hashOfConfig":"54"},{"size":292,"mtime":1654968636888,"results":"67","hashOfConfig":"54"},{"size":250,"mtime":1654968636876,"results":"68","hashOfConfig":"54"},{"size":459,"mtime":1654968636891,"results":"69","hashOfConfig":"54"},{"size":6965,"mtime":1655055521526,"results":"70","hashOfConfig":"54"},{"size":2671,"mtime":1654971383447,"results":"71","hashOfConfig":"54"},{"size":6468,"mtime":1654968636860,"results":"72","hashOfConfig":"54"},{"size":4854,"mtime":1654968636862,"results":"73","hashOfConfig":"54"},{"size":3147,"mtime":1654968636864,"results":"74","hashOfConfig":"54"},{"size":4174,"mtime":1654972897473,"results":"75","hashOfConfig":"54"},{"size":5994,"mtime":1655055287415,"results":"76","hashOfConfig":"54"},{"size":3206,"mtime":1654968636866,"results":"77","hashOfConfig":"54"},{"size":371,"mtime":1654968636857,"results":"78","hashOfConfig":"54"},{"size":2815,"mtime":1654968636844,"results":"79","hashOfConfig":"54"},{"size":2639,"mtime":1655055920370,"results":"80","hashOfConfig":"54"},{"size":628,"mtime":1654968636856,"results":"81","hashOfConfig":"54"},{"size":2550,"mtime":1654968636854,"results":"82","hashOfConfig":"54"},{"size":4044,"mtime":1654973918759,"results":"83","hashOfConfig":"54"},{"size":670,"mtime":1654968636853,"results":"84","hashOfConfig":"54"},{"size":738,"mtime":1654968636852,"results":"85","hashOfConfig":"54"},{"size":263,"mtime":1654968636893,"results":"86","hashOfConfig":"54"},{"size":2513,"mtime":1654968636889,"results":"87","hashOfConfig":"54"},{"size":656,"mtime":1654968636829,"results":"88","hashOfConfig":"54"},{"size":2991,"mtime":1655054429018,"results":"89","hashOfConfig":"54"},{"size":1015,"mtime":1655016704319,"results":"90","hashOfConfig":"54"},{"size":1478,"mtime":1654968636875,"results":"91","hashOfConfig":"54"},{"size":803,"mtime":1654968636879,"results":"92","hashOfConfig":"54"},{"size":764,"mtime":1654968636886,"results":"93","hashOfConfig":"54"},{"size":2877,"mtime":1654968636850,"results":"94","hashOfConfig":"54"},{"size":3124,"mtime":1654974514811,"results":"95","hashOfConfig":"54"},{"size":3026,"mtime":1655055080326,"results":"96","hashOfConfig":"54"},{"size":1357,"mtime":1654973073451,"results":"97","hashOfConfig":"54"},{"size":3929,"mtime":1654968636839,"results":"98","hashOfConfig":"54"},{"size":811,"mtime":1654968636846,"results":"99","hashOfConfig":"54"},{"size":1486,"mtime":1654971666390,"results":"100","hashOfConfig":"54"},{"size":160,"mtime":1654968636878,"results":"101","hashOfConfig":"54"},{"size":154,"mtime":1654968636886,"results":"102","hashOfConfig":"54"},{"size":2092,"mtime":1654974590122,"results":"103","hashOfConfig":"54"},{"size":692,"mtime":1654974279982,"results":"104","hashOfConfig":"54"},{"size":1460,"mtime":1654968636848,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1aeeb5a",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"108"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"108"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\index.js",[],["231","232"],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\App.js",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\store.js",["233"],"import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport { searchReducer } from \"./Search/reducer\";\r\nimport thunk from \"redux-thunk\"\r\nimport { loginReducer } from \"./Login/reducer\";\r\nimport { CompanyReducer } from \"./CompanyReviews/reducer\";\r\nimport { registerReducer } from \"./Register/reducer\";\r\n//do work here\r\nimport {persistStore,persistReducer} from 'redux-persist';\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig={\r\n    key:'persist-key',\r\n    storage\r\n}\r\n\r\n//end\r\n\r\nconst rootReducer = combineReducers({\r\n                                        search:searchReducer,\r\n                                        login:loginReducer,\r\n                                        register:registerReducer,\r\n                                        companies:CompanyReducer\r\n                                    })\r\n//start\r\n\r\nconst persistedReducer = persistReducer(persistConfig , rootReducer);\r\n\r\nexport const store = createStore(persistedReducer,applyMiddleware(thunk))\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport {persistor}\r\n\r\n\r\n// const createComposer  = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// export const store = createStore(rootReducer,createComposer(applyMiddleware(thunk)))\r\n","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Utils\\theme.js",["234"],"import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#127c71\",\r\n        },\r\n        secondary: {\r\n            main: \"#fff\",\r\n        },\r\n    },\r\n    typography: {\r\n        fontFamily: [\"Manrope\", \"sans-serif\"].join(\",\"),\r\n    },\r\n    typography: {\r\n        h6: {\r\n            fontSize: 14,\r\n        },\r\n        h5: {\r\n            fontWeight: \"bold\",\r\n        },\r\n    },\r\n});\r\n","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\CompanyReviews\\reducer.js",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Search\\reducer.js",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Login\\reducer.js",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Register\\reducer.js",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Routes\\Routes.jsx",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\Header\\Header.jsx",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Login\\actionTypes.js",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Login\\actions.js",["235","236"],"import axios from \"axios\";\r\nimport {\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n} from \"./actionTypes\";\r\nimport { runLogoutTimer, saveTokenInLocalStorage } from \"./reducer\";\r\n\r\nconst loginRequest = () => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n  };\r\n};\r\n\r\nconst loginSuccess = (currentUser) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: currentUser,\r\n  };\r\n};\r\n\r\nconst loginFailure = (errorMsg) => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n    payload: errorMsg,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('persist');\r\n  return {\r\n    type: LOGOUT,\r\n  };\r\n};\r\n\r\nexport const makeLoginRequest = ({ email, password }) => (dispatch) => {\r\n  dispatch(loginRequest())\r\n  const expireIn = 3600;\r\n  axios\r\n    .post(\"http://localhost:9002/login\", { \"email\": email, \"password\": password })\r\n    .then((res) => {\r\n      console.log(res.data)\r\n      if (res.data) {\r\n        dispatch(loginSuccess(email));\r\n      }\r\n      else {\r\n        dispatch(loginFailure(\"Invalid Credentials\"))\r\n      }\r\n      runLogoutTimer(dispatch, (expireIn * 1000));\r\n      // dispatch(authenticateUser(email, password, res.data.users));\r\n    })\r\n    .catch((err) => dispatch(loginFailure(\"Somthing went wrong\")));\r\n};\r\n\r\nconst authenticateUser = (email, password, usersData) => (dispatch) => {\r\n  for (let i = 0; i < usersData.length; i++) {\r\n    if (usersData[i].email === email && usersData[i].password === password) {\r\n      dispatch(loginSuccess(usersData[i]));\r\n      return;\r\n    } else {\r\n      if (usersData[i].email === email && usersData[i].password !== password) {\r\n        alert(\"wrong password\");\r\n        dispatch(loginFailure(\"Wrong password\"));\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  alert(\"User Does Not Exist\");\r\n  dispatch(loginFailure(\"User Does Not Exist\"));\r\n};\r\n\r\n\r\n","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Register\\actionTypes.js",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Search\\actionTypes.js",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\CompanyReviews\\actionsConstants.js",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Routes\\PrivateRoute.jsx",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Pages\\AppliedJobs.jsx",["237","238"],"import { Box, Button, Container, Typography } from '@mui/material';\r\n// import { styled } from '@mui/material/styles';\r\nimport React, { useReducer, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n// import { timeDifference } from '../../Utils/timeDifference';\r\nimport {makeApplyRequest} from \"../../Redux/JobApply/actions\"\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n// import Slide from '@mui/material/Slide';\r\n\r\nfunction AppliedJobs(props) {\r\n\r\n    const {saved_jobs,applied_job,id} = useSelector(state=>state.login.loggedUser)\r\n    const jobKeys = Object.keys(saved_jobs).reverse()\r\n    const applied = Object.keys(applied_job).reverse()\r\n   \r\n    const [ignored, forceUpdate] =useReducer(x => x + 1, 0)\r\n\r\n    const dispatch = useDispatch();\r\n    // console.log(loggedUser)\r\n    const [open, setOpen] = useState(false)\r\n    const [jobId, setJobId] = useState(\"\")\r\n\r\n  \r\n\r\n    const handleClose=() =>{\r\n        setOpen(false)\r\n        setJobId(\"\")\r\n    }\r\n\r\n    const handleOpen=(id)=>{\r\n        setJobId(id)\r\n        setOpen(true)\r\n    }\r\n\r\n    const mystate=useSelector(state=>state.login.loggedUser);\r\n\r\n  \r\n\r\n    const handleCancel=(key)=>{\r\n        console.log(applied_job)\r\n        delete applied_job[key];\r\n        console.log(applied_job)\r\n        console.log(\"logged user id\"+ mystate.user_id);\r\n        dispatch(makeApplyRequest({user_id:mystate.user_id,saved_jobs,applied_job}))\r\n        setOpen(false)\r\n        forceUpdate()\r\n    }\r\n    \r\n    return (\r\n        <div style={{padding:'100px 10vw',display:'flex'}}>\r\n                <Box>\r\n                    <Typography variant={'h5'} style={{fontSize:'40px',marginBottom:'20px'}}>\r\n                        My Jobs\r\n                    </Typography>\r\n                    <ul style={{display:'flex',marginBottom:'20px'}}>\r\n                        <NavLink to=\"/savedjobs\" activeStyle={{\r\n                            color:\"#127c71\",\r\n                            textDecoration:'underline'\r\n                        }}\r\n                        style={{\r\n                            fontSize:'25px',\r\n                            marginRight:\"30px\"\r\n                        }}\r\n                        >\r\n                            Saved {jobKeys.length}\r\n                        </NavLink>\r\n                        <NavLink to=\"/appliedjobs\"\r\n                        activeStyle={{\r\n                            color:\"#127c71\",\r\n                            textDecoration:'underline'\r\n                        }}\r\n                        style={{\r\n                            fontSize:'25px',\r\n                            marginRight:\"30px\"\r\n                        }}\r\n                        \r\n                        >\r\n                            Applied {applied.length}\r\n                        </NavLink>\r\n                    </ul>\r\n\r\n                    <Box>\r\n                        \r\n                            {\r\n                                applied.map((key)=>{\r\n                                    return (\r\n                                        <>\r\n                                        <Box style={{display:'flex',border:\"1px solid black\",borderRadius:\"10px\",padding:\"20px\",marginBottom:\"20px\"}}   key={key} >\r\n                                        \r\n                                            <Box style={{width:'500px'}}>\r\n                                                <Typography variant='h5' style={{fontSize:'18px',marginBottom:'15px'}}> \r\n                                                    {applied_job[key].jobTitle}\r\n                                                </Typography>\r\n                                                <Box style={{marginBottom:'15px',fontWeight:'600',color:'grey'}}>\r\n                                                {applied_job[key].companyName} | {applied_job[key].location}\r\n                                                </Box>\r\n                                                <Box style={{marginBottom:'30px',fontSize:'14px',fontWeight:'400',color:'grey'}}>\r\n                                                    Applied \r\n                                                    {/* { timeDifference(applied_job[key].dateSaved)} */}\r\n                                                </Box>\r\n                                            </Box>\r\n                                            <Box style={{display:'flex'}}>\r\n                                            <Button className=\"applyButton\" onClick={()=>handleOpen(key)} style={{height:\"40px\", width:\"100px\", border:\"1px solid\"}} >\r\n                                                    Cancel {jobId  ? null : null} {ignored ? null : null}\r\n                                            </Button>\r\n\r\n                                            </Box>\r\n                                           \r\n                                    </Box>\r\n                                     <Dialog\r\n                                     open={open}\r\n                                    //  TransitionComponent={Transition}\r\n                                     keepMounted\r\n                                     onClose={handleClose}\r\n                                     aria-labelledby=\"alert-dialog-slide-title\"\r\n                                     aria-describedby=\"alert-dialog-slide-description\"\r\n                                 >\r\n                                     <DialogTitle id=\"alert-dialog-slide-title\">{\"Are you sure you want to cancel the application?\"}</DialogTitle>\r\n                                     <DialogContent>\r\n                                     <DialogContentText id=\"alert-dialog-slide-description\">\r\n                                        \r\n                                     </DialogContentText>\r\n                                     </DialogContent>\r\n                                     <DialogActions>\r\n                                     <Button onClick={()=> handleCancel(key)} color=\"primary\">\r\n                                         Yes\r\n                                     </Button>\r\n                                     <Button onClick={handleClose} color=\"primary\">\r\n                                         No\r\n                                     </Button>\r\n                                     </DialogActions>\r\n                                 </Dialog>\r\n                                 </>\r\n                                    )\r\n                                })\r\n                            }\r\n                        \r\n                            \r\n                    \r\n                    </Box>\r\n                   \r\n                </Box>\r\n           \r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppliedJobs;","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Pages\\CompanyReviews.jsx",["239","240","241"],"import { Container, Grid, Typography } from \"@mui/material\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  getCompanyReviews,\r\n  searchCompany,\r\n} from \"../../Redux/CompanyReviews/action\";\r\nimport Bossbaby from \"../Layout/bossbaby/Bossbaby\";\r\nimport { CompanyBox } from \"../Layout/Companies/CompanyBox\";\r\nimport \"./css/companyReviews.style.css\";\r\nexport function CompanyReviews() {\r\n  const [companies, setCompanies] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { isAuth } = useSelector((state) => state.login);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(searchCompany(query));\r\n  };\r\n\r\n  const handleCompanyClick = (id) => {\r\n    dispatch(getCompanyReviews(id));\r\n    history.push(`/reviews?id=${id}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://job-api-jayesh-deploy.herokuapp.com/companies\")\r\n      .then((res) => {\r\n        setCompanies(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return isAuth ? (\r\n    <Container\r\n      className=\"container\"\r\n      maxWidth=\"xl\"\r\n      style={{ marginTop: \"75px\" }}\r\n    >\r\n      <Bossbaby></Bossbaby>\r\n      <Grid\r\n        className=\"companiesHiring\"\r\n        item\r\n        container\r\n        xl={9}\r\n        lg={9}\r\n        md={9}\r\n        sm={11}\r\n        xs={12}\r\n      >\r\n        <Grid item container>\r\n          <Grid item>\r\n            <img\r\n              src=\"/Images/location.PNG\"\r\n              alt=\"location pin\"\r\n              style={{ padding: \"5px 0 5px 10px\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography style={{ paddingTop: \"15px\" }} variant=\"h5\">\r\n              Companies Reviews\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          style={{\r\n            width: \"1020px\",\r\n            gap: \"\",\r\n            paddingLeft: \"30px\",\r\n            paddingRight: \"20px\",\r\n          }}\r\n        >\r\n          {companies.map((item) => {\r\n            return (\r\n              <CompanyBox\r\n                key={item.id}\r\n                logo={item.logo}\r\n                name={item.company}\r\n                rating={item.ratings}\r\n                id={item.id}\r\n                handleClick={handleCompanyClick}\r\n              />\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  ) : (\r\n    <div to=\"/review\" />\r\n  );\r\n\r\n}\r\n","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Pages\\DisplayJobs.jsx",["242","243","244","245","246","247","248","249","250"],"import React, { useEffect, useState,  useReducer } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Container, Grid, Typography } from '@mui/material';\r\nimport { useHistory} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Pagination from '@mui/material/Pagination';\r\n// import classNames from 'classnames'\r\nimport SearchForm from '../Layout/Forms/SearchForm/SearchForm';\r\n// import FillterButton from '../Layout/FilterJobsButton/FillterButton';\r\nimport { getSearchData, fetchSuccess, setCurrentPage } from '../../Redux/Search/actions';\r\nimport JobDescription from '../Layout/JobDescription';\r\n// import styled from 'styled-components' \r\n// import {timeDifference} from '../../Utils/timeDifference'\r\nimport JobMenu from '../Layout/Menu/JobMenu';\r\nimport {makeSaveJobRequest} from '../../Redux/SaveJob/actions';\r\nimport \"./css/displayjob.style.css\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n// import { axios } from 'axios';\r\n\r\n\r\n\r\n\r\nfunction DisplayJobs(props) {\r\n    \r\n    \r\n    const query = new URLSearchParams(props.location.search)\r\n\r\n\r\n    let job = query.get('q') || \"\"\r\n    let location = query.get('location') || \"\"\r\n    let jt = query.get(\"jt\") || \"\"\r\n    let occu = query.get(\"occupation\") || \"\"\r\n    let edu = query.get(\"education\") || \"\"\r\n   \r\n    \r\n    const [ignored, forceUpdate] =useReducer(x => x + 1, 0)\r\n\r\n    \r\n    let jobs = useSelector(state=>state.search.searched)\r\n    let totalCount = useSelector(state=>state.search.totalCount)\r\n    const loggedUser = useSelector(state=>state.login.loggedUser);\r\n    let isLoading = useSelector(state=>state.search.isLoading)\r\n    let p = useSelector(state=>state.search.page)\r\n    \r\n    // const handelReset = ()=>{\r\n    //     dispatch(getSearchData(job,location,page))\r\n    //     forceUpdate()\r\n    // }\r\n\r\n    \r\n    const pageNo = query.get('page')\r\n    let [page,setPage] = useState(Number(pageNo))\r\n\r\n\r\n    // let [jobType,setJobType] = useState(jt) \r\n    // let [occupation, setOccupation] = useState(occu)\r\n    // let [education , setEducation] = useState(edu)\r\n    // let [sortDateIsCliked,setSortDateIsCliked] = useState(false)\r\n\r\n\r\n    let [jobData,setJobData] = useState(null)   \r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    \r\n\r\n    const handlePageChange = (event, page) => {\r\n        setPage(page)\r\n        dispatch(setCurrentPage(page))\r\n        history.push(`/jobs?q=${job}&location=${location}&page=${page}`)\r\n    };\r\n\r\n\r\n    useEffect(()=>{\r\n        dispatch(getSearchData(job,location,page))\r\n        forceUpdate()\r\n    },[job,location,page])\r\n\r\n\r\n\r\n    const getJobDescription = (job)=>{    \r\n                setJobData(job)     \r\n    }\r\n    const mystate=useSelector((state)=>state.login.loggedUser);\r\n\r\n\r\n\r\n    const handelSave = ({jobkey,location,companyName,jobTitle})=>{\r\n        const {id,saved_jobs} = loggedUser\r\n        saved_jobs[jobkey] = {\r\n            jobkey,location,companyName,jobTitle,\r\n            dateSaved:new Date().getTime()\r\n        }\r\n        \r\n        dispatch(makeSaveJobRequest({user_id:mystate.user_id,saved_jobs}))\r\n    }\r\n\r\n    const removeFromSaved = ({jobkey})=>{\r\n        const {id,saved_jobs} = loggedUser\r\n        delete saved_jobs[jobkey]\r\n        dispatch(makeSaveJobRequest({user_id:mystate.user_id,saved_jobs}))\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        <div className=\"job_section\" >\r\n            {console.log(jobs)}\r\n            <Box style={{transform:\"scale(0.8) translateX(-12%)\"}}>\r\n                <SearchForm />\r\n            </Box>\r\n            {\r\n                isLoading ? (\r\n\r\n                    <Box sx={{ display: 'flex' }}>\r\n                        <CircularProgress />\r\n                    </Box>\r\n                ): jobs.length ? (\r\n                    \r\n                    <>\r\n                <Box>\r\n            </Box>\r\n            <Box className=\"greyText\">\r\n                jobs in {location}\r\n            </Box>\r\n            {ignored ? null : null}\r\n            <Box className=\"sort_container\">\r\n              \r\n            </Box>\r\n                <Box style={{display:'flex'}} >  \r\n                    <Grid className=\"jobContainer\" classes=\"fhhh\" container>\r\n                        {\r\n\r\n                            jobs.map((job,index)=>\r\n                            <Grid className=\"card\"  item key={job.jobkey} lg={12} md={12} sm={12} xs={12} >\r\n                                <Box \r\n                                onClick={()=>getJobDescription(job)} \r\n                                >\r\n                                    <Typography  className=\"job_title\">\r\n                                        {job.jobTitle}\r\n                                    </Typography>\r\n                                    <Typography className=\"job_subTitle\">\r\n                                        {job.companyName}\r\n                                    </Typography>\r\n                                    <Typography className=\"job_subTitle\">\r\n                                        {job.location}\r\n                                    </Typography>\r\n                                    <Typography className=\"job_subTitle\">\r\n                                    ₹ {Number(job.startSalary).toLocaleString('en-IN')} - ₹ {Number(job.endSalary).toLocaleString('en-IN')}\r\n                                    </Typography>\r\n                                </Box>\r\n                                <JobMenu \r\n                                job={job} \r\n                                handelSave={handelSave}\r\n                                removeFromSaved={removeFromSaved}/>\r\n                            </Grid>)\r\n                        }\r\n                        \r\n                    </Grid>\r\n                    \r\n                    {\r\n                        jobData ? <JobDescription  className=\"chhh\" jobData={jobData} summary={job.snippet} /> : <></> \r\n                    }\r\n                   \r\n                    \r\n                </Box>\r\n                \r\n                \r\n                <Pagination onChange={handlePageChange} count={\r\n                    totalCount % 5 === 0 ?\r\n                    Math.floor(totalCount/5) : Math.floor(totalCount/5) + 1 } variant=\"outlined\" page={p} shape=\"rounded\" />\r\n                    </>\r\n                ) : <Box>No results found</Box>\r\n            }\r\n            \r\n        </div>\r\n        </>\r\n    );\r\n    \r\n}\r\n\r\nexport default DisplayJobs;","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Pages\\Home.jsx",["251","252","253","254","255","256","257","258","259","260","261","262","263","264","265"],"import { Container, Typography } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport React, { useReducer } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchForm from '../Layout/Forms/SearchForm/SearchForm';\r\n// import RecentSearch from '../Layout/RecentSearch';\r\nimport \"./css/Home.style.css\"\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeSaveJobRequest } from '../../Redux/SaveJob/actions';\r\nimport { getSearchData, setCurrentPage } from '../../Redux/Search/actions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { Box } from '@mui/material';\r\nimport JobMenu from '../Layout/Menu/JobMenu';\r\nimport { Grid } from '@mui/material';\r\nimport JobDescription from '../Layout/JobDescription';\r\nimport data from \"./db.json\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Home(props) {\r\n\r\n\r\n    const query = new URLSearchParams(props.location.search)\r\n\r\n\r\n    let job = query.get('q') || \"\"\r\n    let location = query.get('location') || \"\"\r\n    let jt = query.get(\"jt\") || \"\"\r\n    let occu = query.get(\"occupation\") || \"\"\r\n    let edu = query.get(\"education\") || \"\"\r\n   \r\n    \r\n    const [ignored, forceUpdate] =useReducer(x => x + 1, 0)\r\n\r\n    let jobs=data.jobData;\r\n    let totalCount = useSelector(state=>state.search.totalCount)\r\n    const loggedUser = useSelector(state=>state.login.loggedUser);\r\n    let isLoading = useSelector(state=>state.search.isLoading)\r\n    let p = useSelector(state=>state.search.page)\r\n    \r\n    \r\n    const pageNo = query.get('page')\r\n    let [page,setPage] = useState(Number(pageNo))\r\n\r\n\r\n    let [jobData,setJobData] = useState(null)   \r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    \r\n\r\n    useEffect(()=>{\r\n        dispatch(getSearchData(job,location,page))\r\n        forceUpdate()\r\n    },[job,location,page])\r\n\r\n\r\n    const getJobDescription = (job)=>{    \r\n                setJobData(job)     \r\n    }\r\n    const mystate=useSelector((state)=>state.login.loggedUser);\r\n\r\n    const handelSave = ({jobkey,location,companyName,jobTitle})=>{\r\n        const {id,saved_jobs} = loggedUser\r\n        saved_jobs[jobkey] = {\r\n            jobkey,location,companyName,jobTitle,\r\n            dateSaved:new Date().getTime()\r\n        }\r\n        \r\n        dispatch(makeSaveJobRequest({user_id:mystate.user_id,saved_jobs}))\r\n    }\r\n\r\n    const removeFromSaved = ({jobkey})=>{\r\n        const {id,saved_jobs} = loggedUser\r\n        delete saved_jobs[jobkey]\r\n        dispatch(makeSaveJobRequest({user_id:mystate.user_id,saved_jobs}))\r\n    }\r\n\r\n    const contain={\r\n        width:\"80%\",\r\n        marginLeft:\"auto\",\r\n        marginRight:\"auto\"\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\" style={contain}>\r\n            <SearchForm />\r\n            <div className=\"linkContainer\">\r\n                <Link className=\"link\" to=\"/postjob\" >\r\n                    {`Employers Yours next job is - `} \r\n                </Link>\r\n                Hire From Here\r\n            </div>\r\n            {console.log(jobs)}\r\n            \r\n            <div style={{padding:\"20px\",fontWeight:\"bolder\"}}>\r\n                Top jobs For you\r\n            </div>\r\n        <Box style={{display:'flex'}} >  \r\n            <Grid className=\"jobContainer\" classes=\"fhhh\" container>\r\n            {\r\n                jobs.map((job,index)=>\r\n                <Grid className=\"card\"  item key={job.jobkey} lg={12} md={12} sm={12} xs={12} >\r\n                    <Box \r\n                    onClick={()=>getJobDescription(job)} \r\n                    >\r\n                        <Typography  className=\"job_title\">\r\n                            {job.jobTitle}\r\n                        </Typography>\r\n                        <Typography className=\"job_subTitle\">\r\n                            {job.companyName}\r\n                        </Typography>\r\n                        <Typography className=\"job_subTitle\">\r\n                            {job.location}\r\n                        </Typography>\r\n                        <Typography className=\"job_subTitle\">\r\n                        ₹ {Number(job.startSalary).toLocaleString('en-IN')} - ₹ {Number(job.endSalary).toLocaleString('en-IN')}\r\n                        </Typography>\r\n                    </Box>\r\n                    <JobMenu \r\n                    job={job} \r\n                    handelSave={handelSave}\r\n                    removeFromSaved={removeFromSaved}/>\r\n                </Grid>)\r\n\r\n            }\r\n            </Grid>\r\n            {\r\n                    jobData ? <JobDescription  className=\"chhh\" jobData={jobData} summary={job.snippet} /> : <></> \r\n            }\r\n        </Box>\r\n            \r\n\r\n\r\n            {/* <RecentSearch /> */}\r\n            {/* <h3 style={{marginTop:\"40px\"}}>RecentSearch</h3> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Pages\\Login.jsx",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Pages\\Review.jsx",["266","267","268"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCompanyReviews } from \"../../Redux/CompanyReviews/action\";\r\nimport axios from \"axios\";\r\nimport { ReviewBox } from \"../Layout/Review/ReviewBox\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport { Grid, Container, Typography, Button } from \"@mui/material\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Footer from \"../Layout/footer/Footer\";\r\nconst imgCont = {\r\n  padding: \"5px\",\r\n  borderRadius: \"5px\",\r\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n};\r\n\r\nconst optionTab = {\r\n  cursor: \"pointer\",\r\n  fontSize: \"x-large\",\r\n  margin: \"0 40px 0 40px\",\r\n};\r\n\r\nexport function Review(props) {\r\n  const companyDetails = useSelector((state) => state.companies.currentCompany);\r\n  const [reviews, setReviews] = useState([]);\r\n  const query = new URLSearchParams(props.location.search);\r\n  const id = query.get(\"id\");\r\n  const dispatch = useDispatch();\r\n  const { isAuth } = useSelector((state) => state.login);\r\n\r\n  \r\n  useEffect(() => {\r\n    dispatch(getCompanyReviews(id));\r\n\r\n    axios\r\n      .get(`https://job-api-jayesh-deploy.herokuapp.com/reviews?company_id=${id}`)\r\n      .then((res) => {\r\n        setReviews(res.data);\r\n      })\r\n      .catch((err) => console.log(\"Error getting reviews\" + err));\r\n  }, []);\r\n\r\n  return isAuth ? (\r\n    companyDetails ? (\r\n      <div>\r\n        <Container style={{ width:\"1020px\", marginTop: \"100px\" }}>\r\n          <Grid\r\n            container\r\n            style={{\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              marginBottom: \"40px\",\r\n            }}\r\n          >\r\n            <Grid container item lg={6} md={7} sm={8}>\r\n              <Grid item className=\"imgCont\" style={imgCont}>\r\n                <img\r\n                  src={companyDetails.logo}\r\n                  alt={companyDetails.company}\r\n                  width=\"100px\"\r\n                />\r\n              </Grid>\r\n              <Grid item style={{ paddingTop: \"40px\", paddingLeft: \"20px\" }}>\r\n                <Typography variant=\"h5\">{companyDetails.company}</Typography>\r\n                <Typography variant=\"h5\">\r\n                  {companyDetails.ratings}\r\n                  <StarIcon\r\n                    style={{ color: \"#127C71\", paddingRight: \"7px\" }}\r\n                  />\r\n                  <Typography variant=\"caption\">\r\n                    {reviews.length} Reviews\r\n                  </Typography>\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\r\n            <Typography variant=\"h4\">\r\n              <b>About the company</b>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container style={{ justifyContent: \"center\"}}>\r\n            <Typography\r\n              variant=\"body2\"\r\n              style={{ color: \"#767676\", textAlign: \"left\" }}\r\n            >\r\n              {companyDetails.description}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item style={{ marginTop: \"30px\", marginBottom: \"50px\" }}>\r\n            <Typography variant=\"h4\">\r\n              <b>Reviews</b>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container spacing={10}>\r\n            {reviews.map((item) => {\r\n              return (\r\n                <ReviewBox\r\n                  key={item.id}\r\n                  rating={item.rating}\r\n                  job_position={item.job_position}\r\n                  date={item.date}\r\n                  title={item.title}\r\n                  description={item.description}\r\n                />\r\n              );\r\n            })}\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            spacing={1}\r\n            style={{\r\n              fontSize: \"14px\",\r\n              backgroundColor: \"white\",\r\n              padding: \"15px 10px\",\r\n              margin: \"50px -20px 0\",\r\n            }}\r\n          ></Grid>\r\n        </Container>\r\n        <Footer></Footer>\r\n      </div>\r\n    ) : (\r\n      <></>\r\n    )\r\n  ) : (\r\n    <Redirect to=\"/login\" />\r\n  );\r\n}\r\n","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Pages\\SavedJobs.jsx",["269","270"],"import { Box, Button, Container, Typography } from '@mui/material';\r\n// import { styled } from '@mui/material/styles';\r\nimport React, { useReducer, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { makeSaveJobRequest } from '../../Redux/SaveJob/actions';\r\n// import { timeDifference } from '../../Utils/timeDifference';\r\nimport {ApplyModal} from \"../Layout/JobApplyModal/ApplyModal\"\r\nimport {makeApplyRequest} from \"../../Redux/JobApply/actions\"\r\n\r\n\r\n\r\nfunction SavedJobs(props) {\r\n\r\n    const {saved_jobs,applied_job,id} = useSelector(state=>state.login.loggedUser);\r\n\r\n    const mystate=useSelector(state=>state.login.loggedUser);\r\n\r\n    const jobKeys = Object.keys(saved_jobs).reverse()\r\n    const applied = Object.keys(applied_job).reverse()\r\n    \r\n    const [ignored, forceUpdate] =useReducer(x => x + 1, 0)\r\n\r\n    const dispatch = useDispatch();\r\n   \r\n    // console.log(loggedUser)\r\n    const [open, setOpen] = useState(false)\r\n    const [jobId, setJobId] = useState(\"\")\r\n\r\n    const removeFromSaved = ({jobkey})=>{\r\n        console.log(mystate.user_id);\r\n\r\n        const user_id=mystate.user_id;\r\n       \r\n        delete saved_jobs[jobkey]\r\n        dispatch(makeSaveJobRequest({user_id,saved_jobs}))\r\n        forceUpdate();\r\n    }\r\n\r\n    const handleClose=() =>{\r\n        setOpen(false)\r\n        setJobId(\"\")\r\n    }\r\n\r\n    const handleOpen=(id)=>{\r\n        setJobId(id)\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleApply=()=>{\r\n        const user_id=mystate.user_id;\r\n        // console.log(jobId)\r\n        applied_job[jobId]={...saved_jobs[jobId]}\r\n        delete saved_jobs[jobId]\r\n        dispatch(makeApplyRequest({user_id:user_id,saved_jobs,applied_job}))\r\n        setOpen(false)\r\n        forceUpdate()\r\n    }\r\n    \r\n    return (\r\n        <div style={{padding:'100px 10vw',display:'flex'}}>\r\n                <Box>\r\n                    <Typography variant={'h5'} style={{fontSize:'40px',marginBottom:'20px'}}>\r\n                        My Jobs\r\n                    </Typography>\r\n                    <ul style={{display:'flex',marginBottom:'20px'}}>\r\n                        <NavLink to=\"/savedjobs\" activeStyle={{\r\n                            color:\"#127c71\",\r\n                            textDecoration:'underline'\r\n                        }}\r\n                        style={{\r\n                            fontSize:'25px',\r\n                            marginRight:\"30px\"\r\n                        }}\r\n                        >\r\n                            Saved {jobKeys.length}\r\n                        </NavLink>\r\n                        <NavLink to=\"/appliedjobs\"\r\n                        style={{\r\n                            fontSize:'25px'\r\n                        }}\r\n                        \r\n                        >\r\n                            Applied {applied.length}\r\n                        </NavLink>\r\n                    </ul>\r\n                        {ignored ? null : null}\r\n                    <Box>\r\n                        \r\n                            {\r\n                                jobKeys.map((key)=>{\r\n                                    return (\r\n                                        <Box style={{display:'flex',border:\"1px solid black\",borderRadius:\"10px\",padding:\"20px\",}}   key={key} >\r\n                                        \r\n                                            <Box style={{width:'500px'}}>\r\n                                                <Typography variant='h5' style={{fontSize:'18px',marginBottom:'15px'}}> \r\n                                                    {saved_jobs[key].jobTitle}\r\n                                                </Typography>\r\n                                                <Box style={{marginBottom:'15px',fontWeight:'600',color:'grey'}}>\r\n                                                {saved_jobs[key].companyName} | {saved_jobs[key].location}\r\n                                                </Box>\r\n                                                <Box style={{marginBottom:'30px',fontSize:'14px',fontWeight:'400',color:'grey'}}>\r\n                                                    Saved \r\n                                                </Box>\r\n                                            </Box>\r\n                                            <Box style={{display:'flex'}}>\r\n                                            <Button className=\"applyButton\" style={{width:\"100px\",\r\n                                                height:\"40px\",\r\n                                                border:\"1px solid\"}}\r\n                                             onClick={()=>handleOpen(key)} \r\n                                             disabled={applied_job[key]?true:false}>\r\n                                                    {applied_job[key]?\"Already applied\":\"Apply\"}\r\n                                                </Button>\r\n                                            </Box>\r\n                                            <Box onClick={()=>{removeFromSaved({jobkey:key})}} style={{cursor:\"pointer\",width:\"40px\",height:'40px',display:'flex',justifyContent:'center',alignItems:'center'}} >\r\n                                                <span>\r\n                                                    X\r\n                                                </span>\r\n                                            </Box>\r\n                                    </Box>\r\n                                    )\r\n                                })\r\n                            }\r\n                        \r\n                            \r\n                    \r\n                    </Box>\r\n                    <ApplyModal \r\n                    open={open}\r\n                    handleClose = {()=>handleClose()}\r\n                    jobId = {jobId}\r\n                    handleApply ={()=>handleApply()}\r\n                    />\r\n                </Box>\r\n           \r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SavedJobs;","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Pages\\Register.jsx",["271","272","273","274","275","276","277","278","279","280","281","282","283","284"],"import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  OutlinedInput,\r\n  Typography,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { IconButton, Snackbar } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { Box, FormHelperText, FormControlLabel, Checkbox } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { makeRegisterRequest } from \"../../Redux/Register/actions\";\r\nimport MyAppbar from \"../Layout/appbar/MyAppbar\";\r\nimport styles from \"./Register.module.css\";\r\n\r\nconst GreenCheckbox = (props) => <Checkbox color=\"default\" {...props} />;\r\n\r\nexport function Register() {\r\n  const isAuth = useSelector((state) => state.login.isAuth);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\r\n\r\n  // const {success,isError,errorMsg} = useSelector(state=>state.register)\r\n\r\n  const onNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onPasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(makeRegisterRequest({ name, email, password }));\r\n  };\r\n\r\n  return !isAuth ? (\r\n    <>\r\n      <MyAppbar />\r\n      <div className={styles.mybox}>\r\n        <div className={styles.signup_container}>\r\n          <div className={styles.signup_form_container}>\r\n            <div className={styles.left}>\r\n              <h1>Already an User?</h1>\r\n              <Link to=\"/login\">\r\n                <button type=\"button\" className={styles.white_btn}>\r\n                  Sign in\r\n                </button>\r\n              </Link>\r\n            </div>\r\n            <div className={styles.right}>\r\n              <form className={styles.form_container} onSubmit={handleSubmit}>\r\n                <h1>Create Account</h1>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  className={styles.input}\r\n                  value={name}\r\n                  placeholder=\"Your Name\"\r\n                  onChange={onNameChange}\r\n                ></input>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  className={styles.input}\r\n                  value={email}\r\n                  placeholder=\"Your Email\"\r\n                  onChange={onEmailChange}\r\n                ></input>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  className={styles.input}\r\n                  value={password}\r\n                  placeholder=\"Your Password\"\r\n                  onChange={onPasswordChange}\r\n                ></input>\r\n                <button type=\"submit\" className={styles.green_btn}>\r\n                  Sign Up\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  ) : (\r\n    <Redirect to=\"/login\" />\r\n  );\r\n}\r\n","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\homepage\\Homepage.jsx",["285"],"import React from \"react\";\r\nimport MyAppbar from \"../appbar/MyAppbar\";\r\nimport Footer from \"../footer/Footer\";\r\n// import \"../../../App.css\";\r\nimport Cards from \"./Cards\";\r\nimport HeroSection from \"./HeroSection\";\r\n\r\nfunction Homepage() {\r\n  return (\r\n    <>\r\n      <HeroSection />\r\n      <Cards />\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\appbar\\MyAppbar.jsx",["286"],"import BusinessCenterIcon from \"@mui/icons-material/BusinessCenter\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport * as React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n// import SearchForm from \"../Forms/SearchForm/SearchForm\";\r\nimport styles from \"./MyAppbar.module.css\";\r\nimport UserMenu from \"./UserMenu\";\r\n// import handleSearch from './../Forms/SearchForm/SearchForm';\r\nimport SearchForm from \"../Forms/SearchForm/SearchForm\";\r\n\r\n\r\n\r\nexport default function MyAppbar() {\r\n  const { isAuth } = useSelector((state) => state.login);\r\n  // let jobs = useSelector(state=>state.search.searched)\r\n\r\n  // function add(){\r\n\r\n  // }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar elevation={0} style={{ background: \"white\" , overflow:\"auto\" }} position=\"fixed\">\r\n          <Toolbar className={styles.toolbar}>\r\n            <Box className={styles.header_left}>\r\n              <Box className={styles.link}>\r\n                <Typography\r\n                  sx={{ fontWeight: \"bold\" }}\r\n                  className={styles.typography}\r\n                >\r\n                  <Link to=\"/\">\r\n                    <BusinessCenterIcon\r\n                      fontSize=\"large\"\r\n                      style={{ color: \"#127c71\" }}\r\n                    ></BusinessCenterIcon>\r\n                  </Link>\r\n                </Typography>\r\n\r\n                <Link style={{ textDecoration: \"none\" }}  to=\"/viewjobs\">\r\n                  <Typography\r\n                    sx={{ fontWeight: \"bold\", fontSize: \"1.2rem\" }}\r\n                    className={styles.typography}\r\n                  >\r\n                    Find Jobs\r\n                  </Typography>\r\n                </Link>\r\n                <Link style={{ textDecoration: \"none\" }} to=\"/companies\">\r\n                  <Typography\r\n                    // sx={{ fontSize: \"1.2rem\" }}\r\n                    sx={{ fontSize: \"1.2rem\" }}\r\n                    className={styles.typography}\r\n                  >\r\n                    Company Reviews\r\n                  </Typography>\r\n                </Link>\r\n              </Box>\r\n            </Box>\r\n            <Box className={styles.header_right}>\r\n              {isAuth ? (\r\n                <UserMenu />\r\n              ) : (\r\n                <Link to=\"/login\">\r\n                  <Typography\r\n                    sx={{ fontSize: \"1.2rem\" }}\r\n                    className={styles.typography}\r\n                  >\r\n                    Login\r\n                  </Typography>\r\n                </Link>\r\n              )}\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\appbar\\UserMenu.jsx",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\homepage\\HeroSection.jsx",["287"],"import React from \"react\";\r\n// import '../../App.css';\r\nimport { Button } from \"./Button\";\r\nimport \"./HeroSection.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction HeroSection() {\r\n  return (\r\n    <div className=\"hero-container\">\r\n      <video src=\"/videos/video3.mp4\" autoPlay loop muted />\r\n      <h1>Job Search Made Easier</h1>\r\n      <p>What are you waiting for?</p>\r\n      <div className=\"hero-btns\">\r\n        <Link style={{ textDecoration: \"none\" }} to=\"/viewjobs\">\r\n          <button className=\"green_btn\">Get Started</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeroSection;\r\n","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\homepage\\Cards.jsx",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\SearchForm.jsx",["288","289"],"import {  Box, Button, Grid} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport React, { useState } from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport InputGrid from './InputGrid';\r\nimport { getSearchData, setCurrentPage } from '../../../../Redux/Search/actions';\r\nimport { loadData, saveData } from '../../../../Utils/localStorage';\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"./jobsearchform.style.css\"\r\n\r\n\r\nfunction SearchForm(props) {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const [job,setJob] = useState('');\r\n    const [location,setLocation] = useState('');\r\n    const jobOptions = ['Java Developer','Javascript Developer','React Developer','Government','Account']\r\n    const locationOptions = ['Bangalore','Mumbai','Delhi','Kolkata','Chennai', 'Jalgaon'];\r\n    const history = useHistory()\r\n    const [error,setError] = useState(false);\r\n\r\n    \r\n\r\n    const handleSearch=e=>{\r\n        e.preventDefault();\r\n\r\n        //if both are null the return error\r\n        if(job === \"\" && location === \"\"){\r\n            setError(true);\r\n            return\r\n        }\r\n\r\n\r\n        //default value of number of page 1;\r\n        dispatch(setCurrentPage(1))\r\n        dispatch(getSearchData(job === \"\"?\"\":job,location=== \"\"?\"\" : location))\r\n        \r\n        let data = loadData(\"recent\") || []\r\n        let str = job !== \"\" && location !== \"\" ? {category:\"both\" , query: `${job} - ${location}`} : job === \"\" && location !== \"\" ? {category:\"location\", query:`${location}`} : {category:\"job\",query:`${job}`}\r\n\r\n        if(data.length === 4){\r\n            data.reverse()\r\n            if(data.some(item=>item.category===str.category && item.query === str.query)){\r\n                data = data.filter(item=>item.category !== str.category || item.query !== str.query)\r\n                data.push(str)\r\n            }\r\n            else{\r\n                data.shift()\r\n                data.push(str)\r\n            }\r\n            \r\n        }\r\n        else {\r\n            if(data.some(item=>item.category===str.category && item.query===str.query)){\r\n                data = data.filter(item=>item.category !== str.category || item.query !== str.query)\r\n                data.push(str)\r\n            }\r\n            else{\r\n                \r\n                data.push(str)\r\n            }\r\n        }\r\n\r\n        saveData(\"recent\",data.reverse())\r\n        history.push(`/jobs?q=${job}&location=${location}&page=1`)\r\n\r\n    }\r\n\r\n    // const handelSubmit = (e)=>{\r\n    //     e.preventDefault();\r\n    //     history.push(`/jobs/q=${job}&l=${location}`)\r\n    // }\r\n\r\n\r\n    return (\r\n        (<>\r\n        <div style={{width:\"100%\" , height:\"90px\"}}></div>\r\n            { error ? <Box>Query is Empty</Box> : <></> }\r\n            <form  onSubmit={handleSearch} className=\"searchForm\" style={{width:\"60%\", marginLeft:\"auto\", marginRight:\"auto\"}}>\r\n                <Grid container spacing={1}>\r\n                    \r\n                    <InputGrid setValue={setJob} value={job} label={'What?'} \r\n                    helperText={'Job, Job Position'} classes=\"classes\"\r\n                    options={job !== \"\" ?jobOptions:null}\r\n                    setError = {setError}\r\n                    />\r\n\r\n                    <InputGrid setError = {setError} setValue={setLocation} value={location} label={'Where'}\r\n                    helperText='City, state, or pin code' classes=\"classes\"\r\n                    options={locationOptions} />\r\n\r\n\r\n                    <input type=\"text\" value='a' style={{display:\"none\"}}/>\r\n\r\n\r\n                    <Grid item lg={2} md={2} sm={2} xs={12} className=\"btn_Container\">\r\n                        <Button color={'primary'} variant='contained' type='submit' style={{height:\"55px\"}} >\r\n                            Find Jobs\r\n                        </Button>\r\n\r\n\r\n                        {/* change reset into submit then it will work properly */}\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </>)\r\n    );\r\n}\r\n\r\nexport default SearchForm;","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\homepage\\CardItem.jsx",["290"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction CardItem(props) {\r\n  return (\r\n    <>\r\n      <li className='cards__item'>\r\n        <Link className='cards__item__link' to={props.path}>\r\n          <figure className='cards__item__pic-wrap' data-category={props.label}>\r\n            <img\r\n              className='cards__item__img'\r\n              alt='Travel Image'\r\n              src={props.src}\r\n            />\r\n          </figure>\r\n          <div className='cards__item__info'>\r\n            <h5 className='cards__item__text'>{props.text}</h5>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardItem;\r\n","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\homepage\\Button.jsx",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Utils\\localStorage.js",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Search\\actions.js",["291"],"import {\r\n  COUNT_TOTAL_RESULT,\r\n  FETCH_ERROR,\r\n  SET_PAGE,\r\n  FETCH_LOADING,\r\n  FETCH_SUCCESS,\r\n} from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\n// https://job-api-jayesh-deploy.herokuapp.com/\r\n\r\n\r\nconst base_url = \"https://job-api-jayesh-deploy.herokuapp.com\";\r\nexport const fetchSuccess = (payload) => {\r\n  return {\r\n    type: FETCH_SUCCESS,\r\n    payload,\r\n  };\r\n};\r\n\r\nconst fetchloading = () => {\r\n  return {\r\n    type: FETCH_LOADING,\r\n  };\r\n};\r\n\r\nconst fetchError = () => {\r\n  return {\r\n    type: FETCH_ERROR,\r\n  };\r\n};\r\n\r\n\r\n//\r\nexport const setCurrentPage = payload=>{\r\n    return{\r\n      type:SET_PAGE,\r\n      payload\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setCount = (payload) => {\r\n  return {\r\n    type: COUNT_TOTAL_RESULT,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const dispatchCount = (payload) => (dispatch) => {\r\n  const { job, location, start, jobType } = payload;\r\n  // console.log(job,location,start)\r\n\r\n  var config = {\r\n    method: \"GET\",\r\n    url: `${base_url}/jobs`,\r\n    params: {\r\n      q: job,\r\n      city_like: location,\r\n      jobType_like: jobType,\r\n      _start: start,\r\n    },\r\n  };\r\n\r\n  axios(config).then((res) => {\r\n    // console.log(\"data\",res.data)\r\n    dispatch(setCount(res.data.length));\r\n  });\r\n};\r\n\r\nexport const getSearchData = (job = \"\", location = \"\", page = \"1\") => (dispatch) => {\r\n  dispatch(fetchloading());\r\n\r\n  let url = `${base_url}/jobs?_page=${page}&_limit=5`;\r\n\r\n  if (location !== \"\" && job !== \"\") {\r\n    url = `${base_url}/jobs?location_like=${location}&jobTitle_like=${job}&_page=${page}&_limit=5`;\r\n  } else if (location !== \"\") {\r\n    url = `${base_url}/jobs?location_like=${location}&_page=${page}&_limit=5`;\r\n  } else if (job !== \"\") {\r\n    url = `${base_url}/jobs?jobTitle_like=${job}&_page=${page}&_limit=5`;\r\n  } else return;\r\n\r\n  var config = {\r\n    method: \"GET\",\r\n    url: url,\r\n  };\r\n\r\n  axios(config)\r\n    .then((res) => {\r\n      dispatch(fetchSuccess(res.data));\r\n    })\r\n    .then(() => {\r\n      let url = `${base_url}/jobs`;\r\n\r\n      if (location !== \"\" && job !== \"\") {\r\n        url = `${base_url}/jobs?location_like=${location}&jobTitle_like=${job}`;\r\n      } else if (location !== \"\") {\r\n        url = `${base_url}/jobs?location_like=${location}`;\r\n      } else if (job !== \"\") {\r\n        url = `${base_url}/jobs?jobTitle_like=${job}`;\r\n      }\r\n      axios({config}).then((res) => {\r\n        dispatch(setCount(res.data.length));\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"error\");\r\n      dispatch(fetchError());\r\n    });\r\n};\r\n\r\n","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\InputGrid.jsx",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\Input.jsx",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\Register\\actions.js",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\CompanyReviews\\action.js",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\JobApply\\actions.js",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\SaveJob\\actions.js",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\footer\\Footer.jsx",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\JobDescription.jsx",["292","293","294","295"],"import { Box, Typography } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport React , {useReducer,useState} from 'react';\r\nimport { Button } from '@mui/material';\r\nimport  Section  from './Section';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { makeApplyRequest } from '../../Redux/JobApply/actions';\r\nimport { ApplyModal } from './JobApplyModal/ApplyModal';\r\n\r\n\r\n\r\nconst container ={\r\n        position:'sticky',\r\n        top:'90px',\r\n        marginLeft:'20px',\r\n        marginRight:'-40px',\r\n        alignSelf: 'flex-start',\r\n        border:'1px solid black',\r\n        padding:'15px',\r\n        flex:'1',\r\n        borderRadius:'10px ',\r\n        border:'1px solid red'\r\n}\r\n\r\nconst link={\r\n       display:'flex',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        borderRadius:'10px',\r\n        height:'53px',\r\n        padding:'0 25px',\r\n        fontSize:'20px',\r\n        color:'black',\r\n        backgroundColor:\"grey\",\r\n\r\n}\r\n\r\n\r\n\r\nfunction JobDescription({jobData}) {\r\n\r\n    const {companyName,location,snippet,jobTitle,jobDescription,startSalary,endSalary,jobkey} = jobData\r\n    const {saved_jobs,applied_job,id} = useSelector(state=>state.login.loggedUser)\r\n    const [open, setOpen] = useState(false)\r\n    const [jobId, setJobId] = useState(\"\")\r\n    // const [ignored, forceUpdate] =useReducer(x => x + 1, 0);\r\n\r\n    const mystate = useSelector(state=>state.login.loggedUser);\r\n\r\n    const dispatch = useDispatch();\r\n    const handleClose=() =>{\r\n        setOpen(false)\r\n        setJobId(\"\")\r\n    }\r\n\r\n    const handleOpen=(id)=>{\r\n        setJobId(id)\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleApply=()=>{\r\n       \r\n        \r\n        applied_job[jobId] = {\r\n            jobkey,\r\n            location,\r\n            companyName,\r\n            jobTitle,\r\n            dateSaved:new Date()\r\n        }\r\n        dispatch(makeApplyRequest({user_id:mystate.user_id,saved_jobs,applied_job}))\r\n        setOpen(false)\r\n        // forceUpdate()\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container\" style={container}>\r\n            <Typography variant={'h5'} style={{marginBottom:'10px'}}>\r\n                {jobTitle}\r\n            </Typography>\r\n            <Box style={{marginBottom:'10px'}}>\r\n                {companyName}, {location}\r\n            </Box>\r\n            \r\n            <Box style={{marginBottom:'10px'}}>\r\n                ₹ {Number(startSalary).toLocaleString('en-IN')} - ₹ {Number(endSalary).toLocaleString('en-IN')}\r\n            </Box>\r\n         \r\n            <Button className=\"link\" style={link} onClick={()=>handleOpen(jobkey)} disabled={applied_job[jobkey]?true:false} >\r\n                {applied_job[jobkey]?'Applied':'Apply Now'}\r\n            </Button>\r\n            <Section jobDescription={jobDescription} summary={snippet} />\r\n            <ApplyModal \r\n                    open={open}\r\n                    handleClose = {()=>handleClose()}\r\n                    jobId = {jobId}\r\n                    handleApply ={()=>handleApply()}\r\n            />\r\n\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JobDescription;","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\JobApplyModal\\ApplyModal.jsx",["296","297"],"import React from 'react';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport Modal from '@mui/material/Modal';\r\nimport { Grid, OutlinedInput } from '@mui/material';\r\nimport UploadForm  from './UploadForm';\r\nimport { Button } from '@mui/material';\r\n\r\n\r\n// const PREFIX = 'ApplyModal';\r\n\r\n// const classes = {\r\n//   modal: `${PREFIX}-modal`,\r\n//   paper: `${PREFIX}-paper`,\r\n//   applyForm: `${PREFIX}-applyForm`,\r\n//   label: `${PREFIX}-label`\r\n// };\r\n\r\n// const Root = styled('div')((\r\n//   {\r\n//     theme\r\n//   }\r\n// ) => ({\r\n//   [`& .${classes.modal}`]: {\r\n    // display: 'flex',\r\n    // alignItems: 'center',\r\n    // justifyContent: 'center',\r\n//   },\r\n\r\nconst modal={\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n}\r\n\r\n\r\nconst applyForm={\r\n  boxSizing:'border-box',\r\n  width: \"30%\",\r\n  borderRadius:\"10px\", \r\n  height: \"80vh\", \r\n  backgroundColor: \"white\",\r\n  outline:'none',\r\n  padding:'40px',\r\n  display:\"flex\",\r\n  flexDirection:\"column\",\r\n  alignItems:\"center\",\r\n  gap:\"10px\",\r\n\r\n}\r\n\r\n\r\nconst textbox={\r\n  width:\"100%\",\r\n  border:\"1px solid black\"\r\n}\r\n\r\nexport const ApplyModal = ({open,handleClose,jobId,handleApply}) => {\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        position:\"relative\"\r\n      }}\r\n     \r\n    >\r\n      \r\n      <Modal\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        \r\n        <div className=\"applyForm\" style={applyForm} >\r\n\r\n          <form action=\"\">\r\n            <Grid container style={{width:\"100%\"}}>\r\n              <Grid item>\r\n                <label style={{margin:\"20px 0px\",display:\"block\" }}>\r\n                    Name\r\n                </label>\r\n                <OutlinedInput required style={textbox}/>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item>\r\n                <label style={{margin:\"10px 0px\",display:\"block\"}}>\r\n                    Email\r\n                </label>\r\n                <OutlinedInput required style={textbox} />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item>\r\n                <label style={{margin:\"10px 0px\",display:\"block\"}}>\r\n                    Phone\r\n                </label>\r\n                <OutlinedInput required style={textbox}/>\r\n              </Grid>\r\n            </Grid>\r\n              <UploadForm />\r\n          </form>\r\n          <Button variant='contained' color='primary' style={{width:\"100px\"}} onClick={handleApply}>Apply</Button>\r\n          <Button variant='outlined' style={{width:\"100px\"}} onClick={handleClose}>cancel</Button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\Review\\ReviewBox.jsx",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\Menu\\JobMenu.jsx",["298"],"import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { IconButton } from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport NotInterested from '@mui/icons-material/NotInterested';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport { fetchSuccess } from '../../../Redux/Search/actions';\r\n\r\n// const PREFIX = 'JobMenu';\r\n\r\n// const classes = {\r\n//   paper: `${PREFIX}-paper`\r\n// };\r\n\r\n// const Root = styled('div')({\r\n//   [`& .${classes.paper}`]: {\r\n//     border: '1px solid #d3d4d5',\r\n//   },\r\n// });\r\n\r\nconst StyledMenu = ((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'center',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'left',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\n\r\n\r\nexport default function JobMenu({job,handelSave,removeFromSaved}) {\r\n\r\nconst {jobkey,companyName,location,jobTitle} = job\r\nlet jobs = useSelector(state=>state.search.searched)\r\nconst {saved_jobs} = useSelector(state=>state.login.loggedUser)\r\nconst dispatch = useDispatch()\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const removeFromList = ({jobkey,location,companyName,jobTitle})=>{\r\n    const newJobs = jobs.filter((job)=>job.jobkey !== jobkey)\r\n    dispatch(fetchSuccess(newJobs))\r\n  }\r\n\r\n  return (\r\n    <div style={{position:'absolute',top:\"0\",right:'0'}}>\r\n        \r\n        <IconButton\r\n          aria-label=\"more\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          size=\"large\">\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n     \r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}>\r\n        {\r\n\r\n        saved_jobs[jobkey] ?\r\n          <MenuItem   onClick={()=>{\r\n              handleClose();\r\n              removeFromSaved({jobkey})\r\n          }}>\r\n\r\n            <ListItemIcon style={{display:'flex',justifyContent:'center'}} > \r\n              <FavoriteIcon fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Saved\" />\r\n          </MenuItem> \r\n        \r\n        :\r\n\r\n          <MenuItem   onClick={()=>{\r\n            handleClose();\r\n            handelSave({jobkey,location,companyName,jobTitle})\r\n        }}>\r\n\r\n          <ListItemIcon style={{display:'flex',justifyContent:'center'}} > \r\n            <FavoriteBorderIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Save Job\" />\r\n        </MenuItem>\r\n        }\r\n\r\n        <MenuItem onClick={()=>{\r\n                handleClose();\r\n                removeFromList({jobkey,location,companyName,jobTitle})\r\n            }}  >\r\n          <ListItemIcon style={{display:'flex',justifyContent:'center'}}>\r\n            <NotInterested fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Not Interseted\" />\r\n        </MenuItem>\r\n        <MenuItem style={{backgroundColor: 'white',color:\"black\"}}>\r\n          <ListItemIcon style={{display:'flex',justifyContent:'center'}}>\r\n            <ErrorIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Is there a problem with the job\" />\r\n        </MenuItem>\r\n      </StyledMenu>\r\n       \r\n    </div>\r\n  );\r\n}","C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\bossbaby\\Bossbaby.jsx",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\Companies\\CompanyBox.jsx",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\JobApply\\actionTypes.js",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Redux\\SaveJob\\actionType.js",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\Section.jsx",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\JobApplyModal\\UploadForm.jsx",[],"C:\\Users\\Prachi\\Final-project-job-portal\\my-app\\src\\Components\\Layout\\bossbaby\\Typewriter.jsx",[],["299","300"],{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","severity":1,"message":"306","line":1,"column":57,"nodeType":"307","messageId":"308","endLine":1,"endColumn":64},{"ruleId":"309","severity":1,"message":"310","line":15,"column":5,"nodeType":"311","messageId":"312","endLine":15,"endColumn":15},{"ruleId":"305","severity":1,"message":"313","line":8,"column":26,"nodeType":"307","messageId":"308","endLine":8,"endColumn":49},{"ruleId":"305","severity":1,"message":"314","line":56,"column":7,"nodeType":"307","messageId":"308","endLine":56,"endColumn":23},{"ruleId":"305","severity":1,"message":"315","line":1,"column":23,"nodeType":"307","messageId":"308","endLine":1,"endColumn":32},{"ruleId":"305","severity":1,"message":"316","line":17,"column":35,"nodeType":"307","messageId":"308","endLine":17,"endColumn":37},{"ruleId":"305","severity":1,"message":"317","line":2,"column":8,"nodeType":"307","messageId":"308","endLine":2,"endColumn":14},{"ruleId":"305","severity":1,"message":"318","line":16,"column":17,"nodeType":"307","messageId":"308","endLine":16,"endColumn":25},{"ruleId":"305","severity":1,"message":"319","line":22,"column":9,"nodeType":"307","messageId":"308","endLine":22,"endColumn":21},{"ruleId":"305","severity":1,"message":"320","line":2,"column":10,"nodeType":"307","messageId":"308","endLine":2,"endColumn":16},{"ruleId":"305","severity":1,"message":"315","line":3,"column":15,"nodeType":"307","messageId":"308","endLine":3,"endColumn":24},{"ruleId":"305","severity":1,"message":"321","line":10,"column":25,"nodeType":"307","messageId":"308","endLine":10,"endColumn":37},{"ruleId":"305","severity":1,"message":"322","line":31,"column":9,"nodeType":"307","messageId":"308","endLine":31,"endColumn":11},{"ruleId":"305","severity":1,"message":"323","line":32,"column":9,"nodeType":"307","messageId":"308","endLine":32,"endColumn":13},{"ruleId":"305","severity":1,"message":"324","line":33,"column":9,"nodeType":"307","messageId":"308","endLine":33,"endColumn":12},{"ruleId":"325","severity":1,"message":"326","line":76,"column":7,"nodeType":"327","endLine":76,"endColumn":26,"suggestions":"328"},{"ruleId":"305","severity":1,"message":"316","line":88,"column":16,"nodeType":"307","messageId":"308","endLine":88,"endColumn":18},{"ruleId":"305","severity":1,"message":"316","line":98,"column":16,"nodeType":"307","messageId":"308","endLine":98,"endColumn":18},{"ruleId":"305","severity":1,"message":"315","line":1,"column":10,"nodeType":"307","messageId":"308","endLine":1,"endColumn":19},{"ruleId":"305","severity":1,"message":"320","line":2,"column":10,"nodeType":"307","messageId":"308","endLine":2,"endColumn":16},{"ruleId":"305","severity":1,"message":"329","line":10,"column":25,"nodeType":"307","messageId":"308","endLine":10,"endColumn":39},{"ruleId":"305","severity":1,"message":"322","line":32,"column":9,"nodeType":"307","messageId":"308","endLine":32,"endColumn":11},{"ruleId":"305","severity":1,"message":"323","line":33,"column":9,"nodeType":"307","messageId":"308","endLine":33,"endColumn":13},{"ruleId":"305","severity":1,"message":"324","line":34,"column":9,"nodeType":"307","messageId":"308","endLine":34,"endColumn":12},{"ruleId":"305","severity":1,"message":"330","line":37,"column":12,"nodeType":"307","messageId":"308","endLine":37,"endColumn":19},{"ruleId":"305","severity":1,"message":"331","line":40,"column":9,"nodeType":"307","messageId":"308","endLine":40,"endColumn":19},{"ruleId":"305","severity":1,"message":"332","line":42,"column":9,"nodeType":"307","messageId":"308","endLine":42,"endColumn":18},{"ruleId":"305","severity":1,"message":"333","line":43,"column":9,"nodeType":"307","messageId":"308","endLine":43,"endColumn":10},{"ruleId":"305","severity":1,"message":"334","line":47,"column":15,"nodeType":"307","messageId":"308","endLine":47,"endColumn":22},{"ruleId":"305","severity":1,"message":"335","line":52,"column":11,"nodeType":"307","messageId":"308","endLine":52,"endColumn":18},{"ruleId":"325","severity":1,"message":"326","line":58,"column":7,"nodeType":"327","endLine":58,"endColumn":26,"suggestions":"336"},{"ruleId":"305","severity":1,"message":"316","line":67,"column":16,"nodeType":"307","messageId":"308","endLine":67,"endColumn":18},{"ruleId":"305","severity":1,"message":"316","line":77,"column":16,"nodeType":"307","messageId":"308","endLine":77,"endColumn":18},{"ruleId":"305","severity":1,"message":"337","line":7,"column":39,"nodeType":"307","messageId":"308","endLine":7,"endColumn":45},{"ruleId":"305","severity":1,"message":"338","line":16,"column":7,"nodeType":"307","messageId":"308","endLine":16,"endColumn":16},{"ruleId":"325","severity":1,"message":"339","line":40,"column":6,"nodeType":"327","endLine":40,"endColumn":8,"suggestions":"340"},{"ruleId":"305","severity":1,"message":"315","line":1,"column":23,"nodeType":"307","messageId":"308","endLine":1,"endColumn":32},{"ruleId":"305","severity":1,"message":"316","line":15,"column":35,"nodeType":"307","messageId":"308","endLine":15,"endColumn":37},{"ruleId":"305","severity":1,"message":"315","line":3,"column":3,"nodeType":"307","messageId":"308","endLine":3,"endColumn":12},{"ruleId":"305","severity":1,"message":"341","line":4,"column":3,"nodeType":"307","messageId":"308","endLine":4,"endColumn":7},{"ruleId":"305","severity":1,"message":"342","line":5,"column":3,"nodeType":"307","messageId":"308","endLine":5,"endColumn":16},{"ruleId":"305","severity":1,"message":"343","line":6,"column":3,"nodeType":"307","messageId":"308","endLine":6,"endColumn":13},{"ruleId":"305","severity":1,"message":"337","line":7,"column":3,"nodeType":"307","messageId":"308","endLine":7,"endColumn":9},{"ruleId":"305","severity":1,"message":"344","line":9,"column":10,"nodeType":"307","messageId":"308","endLine":9,"endColumn":20},{"ruleId":"305","severity":1,"message":"345","line":9,"column":22,"nodeType":"307","messageId":"308","endLine":9,"endColumn":30},{"ruleId":"305","severity":1,"message":"346","line":10,"column":8,"nodeType":"307","messageId":"308","endLine":10,"endColumn":17},{"ruleId":"305","severity":1,"message":"347","line":11,"column":10,"nodeType":"307","messageId":"308","endLine":11,"endColumn":13},{"ruleId":"305","severity":1,"message":"348","line":11,"column":15,"nodeType":"307","messageId":"308","endLine":11,"endColumn":29},{"ruleId":"305","severity":1,"message":"349","line":11,"column":31,"nodeType":"307","messageId":"308","endLine":11,"endColumn":47},{"ruleId":"305","severity":1,"message":"350","line":18,"column":7,"nodeType":"307","messageId":"308","endLine":18,"endColumn":20},{"ruleId":"305","severity":1,"message":"351","line":27,"column":10,"nodeType":"307","messageId":"308","endLine":27,"endColumn":22},{"ruleId":"305","severity":1,"message":"352","line":27,"column":24,"nodeType":"307","messageId":"308","endLine":27,"endColumn":39},{"ruleId":"305","severity":1,"message":"353","line":2,"column":8,"nodeType":"307","messageId":"308","endLine":2,"endColumn":16},{"ruleId":"305","severity":1,"message":"354","line":13,"column":8,"nodeType":"307","messageId":"308","endLine":13,"endColumn":18},{"ruleId":"305","severity":1,"message":"337","line":3,"column":10,"nodeType":"307","messageId":"308","endLine":3,"endColumn":16},{"ruleId":"305","severity":1,"message":"320","line":2,"column":10,"nodeType":"307","messageId":"308","endLine":2,"endColumn":16},{"ruleId":"305","severity":1,"message":"355","line":4,"column":22,"nodeType":"307","messageId":"308","endLine":4,"endColumn":33},{"ruleId":"356","severity":1,"message":"357","line":10,"column":13,"nodeType":"358","endLine":14,"endColumn":15},{"ruleId":"305","severity":1,"message":"359","line":102,"column":9,"nodeType":"307","messageId":"308","endLine":102,"endColumn":12},{"ruleId":"305","severity":1,"message":"320","line":2,"column":10,"nodeType":"307","messageId":"308","endLine":2,"endColumn":16},{"ruleId":"305","severity":1,"message":"360","line":3,"column":17,"nodeType":"307","messageId":"308","endLine":3,"endColumn":27},{"ruleId":"309","severity":1,"message":"361","line":22,"column":9,"nodeType":"311","messageId":"312","endLine":22,"endColumn":15},{"ruleId":"305","severity":1,"message":"316","line":43,"column":35,"nodeType":"307","messageId":"308","endLine":43,"endColumn":37},{"ruleId":"305","severity":1,"message":"320","line":3,"column":10,"nodeType":"307","messageId":"308","endLine":3,"endColumn":16},{"ruleId":"305","severity":1,"message":"362","line":30,"column":7,"nodeType":"307","messageId":"308","endLine":30,"endColumn":12},{"ruleId":"305","severity":1,"message":"320","line":2,"column":10,"nodeType":"307","messageId":"308","endLine":2,"endColumn":16},{"ruleId":"301","replacedBy":"363"},{"ruleId":"303","replacedBy":"364"},"no-native-reassign",["365"],"no-negated-in-lhs",["366"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'typography'.","ObjectExpression","unexpected","'saveTokenInLocalStorage' is defined but never used.","'authenticateUser' is assigned a value but never used.","'Container' is defined but never used.","'id' is assigned a value but never used.","'Rating' is defined but never used.","'setQuery' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'styled' is defined but never used.","'fetchSuccess' is defined but never used.","'jt' is assigned a value but never used.","'occu' is assigned a value but never used.","'edu' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["367"],"'setCurrentPage' is defined but never used.","'ignored' is assigned a value but never used.","'totalCount' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'p' is assigned a value but never used.","'setPage' is assigned a value but never used.","'history' is assigned a value but never used.",["368"],"'Button' is defined but never used.","'optionTab' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["369"],"'Grid' is defined but never used.","'OutlinedInput' is defined but never used.","'Typography' is defined but never used.","'IconButton' is defined but never used.","'Snackbar' is defined but never used.","'CloseIcon' is defined but never used.","'Box' is defined but never used.","'FormHelperText' is defined but never used.","'FormControlLabel' is defined but never used.","'GreenCheckbox' is assigned a value but never used.","'snackBarOpen' is assigned a value but never used.","'setSnackBarOpen' is assigned a value but never used.","'MyAppbar' is defined but never used.","'SearchForm' is defined but never used.","'useSelector' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'url' is assigned a value but never used.","'useReducer' is defined but never used.","Duplicate key 'border'.","'modal' is assigned a value but never used.",["365"],["366"],"no-global-assign","no-unsafe-negation",{"desc":"370","fix":"371"},{"desc":"370","fix":"372"},{"desc":"373","fix":"374"},"Update the dependencies array to be: [dispatch, job, location, page]",{"range":"375","text":"376"},{"range":"377","text":"376"},"Update the dependencies array to be: [dispatch, id]",{"range":"378","text":"379"},[2626,2645],"[dispatch, job, location, page]",[1872,1891],[1379,1381],"[dispatch, id]"]